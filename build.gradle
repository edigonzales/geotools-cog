/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    maven { url "https://maven.geo-solutions.it/" }
    maven { url "https://repo.osgeo.org/repository/release/" }
    mavenCentral()    
}



ext {
    geotoolsVersion = '32.2'
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.3-jre'
    
    implementation "org.geotools:gt-main:${geotoolsVersion}"
    implementation "org.geotools:gt-geotiff:${geotoolsVersion}"
    implementation "org.geotools:gt-epsg-hsql:${geotoolsVersion}"
    //implementation "org.geotools:gt-xml:${geotoolsVersion}"
    //implementation "org.geotools:gt-metadata:${geotoolsVersion}"
    implementation "it.geosolutions.imageio-ext:imageio-ext-cog-reader:1.4.14"
    implementation "it.geosolutions.imageio-ext:imageio-ext-cog-rangereader-http:1.4.14"

    implementation "javax.media:jai_core:1.1.3"
    implementation "javax.media:jai_imageio:1.1"

}

application {
    // Define the main class for the application.
    mainClass = 'gt.test.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
